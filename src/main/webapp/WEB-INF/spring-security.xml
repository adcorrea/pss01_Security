<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xsi:schemaLocation="
		http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">
    <http use-expressions="true">
        <intercept-url pattern="/welcome" access="permitAll"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_NARDONE_MEMBER')"/>
        <form-login authentication-success-handler-ref="awareAuthenticationSuccessHandler" />
    </http>

    <beans:bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler" name="awareAuthenticationSuccessHandler"/>

    <beans:bean id ="passwordEncoder" class = "org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method = "getInstance" />


    <authentication-manager>

        <authentication-provider>
            <!-- Groups Authentication -->
           <!-- <jdbc-user-service
                    data-source-ref="dataSource"
                    group-authorities-by-username-query="select g.id, g.group_name, ga.authority
                        from groups g,
                        group_members gm, group_authorities ga
                        where gm.username = ? and g.id = ga.group_id and g.id = gm.group_id"
            /> -->

            <!-- Authorities Authentication -->
            <!-- <jdbc-user-service  data-source-ref="dataSource" />-->

            <!-- Existing Schemas Authentication -->
            <jdbc-user-service
                    data-source-ref="dataSource"
                    authorities-by-username-query="select name, role from roles where name = ?"
                    users-by-username-query="select name,keyn,1 from people where name = ?"
            />
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="dataSource"
                class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="url"
                        value="jdbc:mysql://localhost:3306/pss1_Security" />
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <beans:property name="username" value="root" />
        <beans:property name="password" value="1234" />
    </beans:bean>

</beans:beans>